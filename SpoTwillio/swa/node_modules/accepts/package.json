{
  "_args": [
    [
      {
        "raw": "accepts@1.0.0",
        "scope": null,
        "escapedName": "accepts",
        "name": "accepts",
        "rawSpec": "1.0.0",
        "spec": "1.0.0",
        "type": "version"
      },
      "/home/nat/web-api-auth-examples/node_modules/express"
    ]
  ],
  "_from": "accepts@1.0.0",
  "_id": "accepts@1.0.0",
  "_inCache": true,
  "_location": "/accepts",
  "_npmUser": {
    "name": "jongleberry",
    "email": "jonathanrichardong@gmail.com"
  },
  "_npmVersion": "1.3.21",
  "_phantomChildren": {},
  "_requested": {
    "raw": "accepts@1.0.0",
    "scope": null,
    "escapedName": "accepts",
    "name": "accepts",
    "rawSpec": "1.0.0",
    "spec": "1.0.0",
    "type": "version"
  },
  "_requiredBy": [
    "/express"
  ],
  "_resolved": "https://registry.npmjs.org/accepts/-/accepts-1.0.0.tgz",
  "_shasum": "3604c765586c3b9cf7877b6937cdbd4587f947dc",
  "_shrinkwrap": null,
  "_spec": "accepts@1.0.0",
  "_where": "/home/nat/web-api-auth-examples/node_modules/express",
  "author": {
    "name": "Jonathan Ong",
    "email": "me@jongleberry.com",
    "url": "http://jongleberry.com"
  },
  "bugs": {
    "url": "https://github.com/expressjs/accepts/issues"
  },
  "dependencies": {
    "mime": "~1.2.11",
    "negotiator": "~0.3.0"
  },
  "description": "Higher-level content negotiation",
  "devDependencies": {
    "mocha": "*",
    "should": "*"
  },
  "directories": {},
  "dist": {
    "shasum": "3604c765586c3b9cf7877b6937cdbd4587f947dc",
    "tarball": "https://registry.npmjs.org/accepts/-/accepts-1.0.0.tgz"
  },
  "homepage": "https://github.com/expressjs/accepts#readme",
  "license": "MIT",
  "maintainers": [
    {
      "name": "jongleberry",
      "email": "jonathanrichardong@gmail.com"
    }
  ],
  "name": "accepts",
  "optionalDependencies": {},
  "readme": "# Accepts [![Build Status](https://travis-ci.org/expressjs/accepts.png)](https://travis-ci.org/expressjs/accepts)\n\nHigher level content negotation based on [negotiator](https://github.com/federomero/negotiator). Extracted from [koa](https://github.com/koajs/koa) for general use.\n\nIn addition to negotatior, it allows:\n\n- Allows types as an array or arguments list, ie `(['text/html', 'application/json'])` as well as `('text/html', 'application/json')`.\n- Allows type shorthands such as `json`.\n- Returns `false` when no types match\n- Treats non-existent headers as `*`\n\n## API\n\n### var accept = new Accepts(req)\n\n```js\nvar accepts = require('accepts')\n\nhttp.createServer(function (req, res) {\n  var accept = accepts(req)\n})\n```\n\n### accept\\[property\\]\\(\\)\n\nReturns all the explicitly accepted content property as an array in descending priority.\n\n- `accept.types()`\n- `accept.encodings()`\n- `accept.charsets()`\n- `accept.languages()`\n\nThey are also aliased in singular form such as `accept.type()`. `accept.languages()` is also aliased as `accept.langs()`, etc.\n\nNote: you should almost never do this in a real app as it defeats the purpose of content negotiation.\n\nExample:\n\n```js\n// in Google Chrome\nvar encodings = accept.encodings() // -> ['sdch', 'gzip', 'deflate']\n```\n\nSince you probably don't support `sdch`, you should just supply the encodings you support:\n\n```js\nvar encoding = accept.encodings('gzip', 'deflate') // -> 'gzip', probably\n```\n\n### accept\\[property\\]\\(values, ...\\)\n\nYou can either have `values` be an array or have an argument list of values.\n\nIf the client does not accept any `values`, `false` will be returned.\nIf the client accepts any `values`, a filtered list of accepted `values` will be return in descending priority.\n\nFor `accept.types()`, shorthand mime types are allowed.\n\nExample:\n\n```js\n// req.headers.accept = 'application/json'\n\naccept.types('json') // -> 'json'\naccept.types('html', 'json') // -> 'json'\naccept.types('html') // -> false\n\n// req.headers.accept = ''\n// which is equivalent to `*`\n\naccept.types() // -> [], no explicit types\naccept.types('text/html', 'text/json') // -> 'text/html', since it was first\n```\n\n## License\n\nThe MIT License (MIT)\n\nCopyright (c) 2013 Jonathan Ong me@jongleberry.com\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/expressjs/accepts.git"
  },
  "scripts": {
    "test": "make test"
  },
  "version": "1.0.0"
}
